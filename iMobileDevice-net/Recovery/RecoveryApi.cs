//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// <copyright file="RecoveryApi.cs" company="Quamotion">
// Copyright (c) 2016-2021 Quamotion. All rights reserved.
// Copyright (c) 2022-2024 Wayne Bonnici.
// </copyright>
#pragma warning disable 1591
#pragma warning disable 1572
#pragma warning disable 1573

namespace iMobileDevice.Recovery
{
    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using iMobileDevice.iDevice;
    using iMobileDevice.Lockdown;
    using iMobileDevice.Afc;
    using iMobileDevice.Plist;
    
    
    public partial class RecoveryApi : IRecoveryApi
    {
        
        /// <summary>
        /// Backing field for the <see cref="Parent"/> property
        /// </summary>
        private ILibiMobileDevice parent;
        
        /// <summary>
        /// Initializes a new instance of the <see cref="RecoveryApi"/> class
        /// </summary>
        /// <param name="parent">
        /// The <see cref="ILibiMobileDeviceApi"/> which owns this <see cref="Recovery"/>.
        /// </param>
        public RecoveryApi(ILibiMobileDevice parent)
        {
            this.parent = parent;
        }
        
        /// <inheritdoc/>
        public ILibiMobileDevice Parent
        {
            get
            {
                return this.parent;
            }
        }
        
        public virtual void irecv_set_debug_level(int level)
        {
            RecoveryNativeMethods.irecv_set_debug_level(level);
        }
        
        public virtual System.IntPtr irecv_strerror(RecoveryError error)
        {
            return RecoveryNativeMethods.irecv_strerror(error);
        }
        
        public virtual void irecv_init()
        {
            RecoveryNativeMethods.irecv_init();
        }
        
        public virtual void irecv_exit()
        {
            RecoveryNativeMethods.irecv_exit();
        }
        
        public virtual System.IntPtr irecv_version()
        {
            return RecoveryNativeMethods.irecv_version();
        }
        
        public virtual RecoveryError irecv_open_with_ecid(out RecoveryClientHandle client, ulong ecid)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_open_with_ecid(out client, ecid);
            client.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_open_with_ecid_and_attempts(out RecoveryClientHandle pclient, ulong ecid, int attempts)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_open_with_ecid_and_attempts(out pclient, ecid, attempts);
            pclient.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_reset(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_reset(client);
        }
        
        public virtual RecoveryError irecv_close(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_close(client);
        }
        
        public virtual RecoveryClientHandle irecv_reconnect(RecoveryClientHandle client, int initialPause)
        {
            RecoveryClientHandle returnValue;
            returnValue = RecoveryNativeMethods.irecv_reconnect(client, initialPause);
            returnValue.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_receive(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_receive(client);
        }
        
        public virtual RecoveryError irecv_execute_script(RecoveryClientHandle client, string script)
        {
            return RecoveryNativeMethods.irecv_execute_script(client, script);
        }
        
        public virtual RecoveryError irecv_reset_counters(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_reset_counters(client);
        }
        
        public virtual RecoveryError irecv_finish_transfer(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_finish_transfer(client);
        }
        
        public virtual RecoveryError irecv_trigger_limera1n_exploit(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_trigger_limera1n_exploit(client);
        }
        
        public virtual RecoveryError irecv_usb_set_configuration(RecoveryClientHandle client, int configuration)
        {
            return RecoveryNativeMethods.irecv_usb_set_configuration(client, configuration);
        }
        
        public virtual RecoveryError irecv_usb_set_interface(RecoveryClientHandle client, int usbInterface, int usbAltInterface)
        {
            return RecoveryNativeMethods.irecv_usb_set_interface(client, usbInterface, usbAltInterface);
        }
        
        public virtual int irecv_usb_control_transfer(RecoveryClientHandle client, char bmRequestType, char bRequest, ushort wValue, ushort wIndex, ref char data, ushort wLength, uint timeout)
        {
            return RecoveryNativeMethods.irecv_usb_control_transfer(client, bmRequestType, bRequest, wValue, wIndex, ref data, wLength, timeout);
        }
        
        public virtual int irecv_usb_bulk_transfer(RecoveryClientHandle client, char endpoint, ref char data, int length, ref int transferred, uint timeout)
        {
            return RecoveryNativeMethods.irecv_usb_bulk_transfer(client, endpoint, ref data, length, ref transferred, timeout);
        }
        
        public virtual RecoveryError irecv_device_event_subscribe(out RecoveryDeviceEventContextHandle context, RecoveryDeviceEventCallBack callback, System.IntPtr userData)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_device_event_subscribe(out context, callback, userData);
            context.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_device_event_unsubscribe(RecoveryDeviceEventContextHandle context)
        {
            return RecoveryNativeMethods.irecv_device_event_unsubscribe(context);
        }
        
        public virtual RecoveryError irecv_event_subscribe(RecoveryClientHandle client, RecoveryEventType type, RecoveryEventCallBack callback, System.IntPtr userData)
        {
            return RecoveryNativeMethods.irecv_event_subscribe(client, type, callback, userData);
        }
        
        public virtual RecoveryError irecv_event_unsubscribe(RecoveryClientHandle client, RecoveryEventType type)
        {
            return RecoveryNativeMethods.irecv_event_unsubscribe(client, type);
        }
        
        public virtual RecoveryError irecv_send_file(RecoveryClientHandle client, string filename, uint options)
        {
            return RecoveryNativeMethods.irecv_send_file(client, filename, options);
        }
        
        public virtual RecoveryError irecv_send_command(RecoveryClientHandle client, string command)
        {
            return RecoveryNativeMethods.irecv_send_command(client, command);
        }
        
        public virtual RecoveryError irecv_send_command_breq(RecoveryClientHandle client, string command, char bRequest)
        {
            return RecoveryNativeMethods.irecv_send_command_breq(client, command, bRequest);
        }
        
        public virtual RecoveryError irecv_send_buffer(RecoveryClientHandle client, ref char buffer, int length, uint options)
        {
            return RecoveryNativeMethods.irecv_send_buffer(client, ref buffer, length, options);
        }
        
        public virtual RecoveryError irecv_recv_buffer(RecoveryClientHandle client, System.IntPtr buffer, int length)
        {
            return RecoveryNativeMethods.irecv_recv_buffer(client, buffer, length);
        }
        
        public virtual RecoveryError irecv_saveenv(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_saveenv(client);
        }
        
        public virtual RecoveryError irecv_getenv(RecoveryClientHandle client, string variable, out string value)
        {
            return RecoveryNativeMethods.irecv_getenv(client, variable, out value);
        }
        
        public virtual RecoveryError irecv_setenv(RecoveryClientHandle client, string variable, string value)
        {
            return RecoveryNativeMethods.irecv_setenv(client, variable, value);
        }
        
        public virtual RecoveryError irecv_setenv_np(RecoveryClientHandle client, string variable, string value)
        {
            return RecoveryNativeMethods.irecv_setenv_np(client, variable, value);
        }
        
        public virtual RecoveryError irecv_reboot(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_reboot(client);
        }
        
        public virtual RecoveryError irecv_getret(RecoveryClientHandle client, ref uint value)
        {
            return RecoveryNativeMethods.irecv_getret(client, ref value);
        }
        
        public virtual RecoveryError irecv_get_mode(RecoveryClientHandle client, ref int mode)
        {
            return RecoveryNativeMethods.irecv_get_mode(client, ref mode);
        }
        
        public virtual System.IntPtr irecv_get_device_info(RecoveryClientHandle client)
        {
            return RecoveryNativeMethods.irecv_get_device_info(client);
        }
        
        public virtual RecoveryDeviceHandle irecv_devices_get_all()
        {
            RecoveryDeviceHandle returnValue;
            returnValue = RecoveryNativeMethods.irecv_devices_get_all();
            returnValue.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_devices_get_device_by_client(RecoveryClientHandle client, out RecoveryDeviceHandle device)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_devices_get_device_by_client(client, out device);
            device.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_devices_get_device_by_product_type(string productType, out RecoveryDeviceHandle device)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_devices_get_device_by_product_type(productType, out device);
            device.Api = this.Parent;
            return returnValue;
        }
        
        public virtual RecoveryError irecv_devices_get_device_by_hardware_model(string hardwareModel, out RecoveryDeviceHandle device)
        {
            RecoveryError returnValue;
            returnValue = RecoveryNativeMethods.irecv_devices_get_device_by_hardware_model(hardwareModel, out device);
            device.Api = this.Parent;
            return returnValue;
        }
        
        public virtual int irecv_devices_get_all_count()
        {
            return RecoveryNativeMethods.irecv_devices_get_all_count();
        }
    }
}
